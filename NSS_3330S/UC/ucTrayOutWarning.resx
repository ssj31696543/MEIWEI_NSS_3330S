<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAABFdJREFUaEPt
        mUtoVVcUhlebYn20gxZfE0HBFlrEouBj4BODFEptK1RaC23RQQVRBHWUyfWJoAOdtGYghuY+QiaWSkMl
        gZQWLIU+IaQV7KRFBxIFjRofMdt/3fznZOXSnJx97r5pAveDxb13rb3+vdc++7z2lTp1JjGuQ553RVkD
        O+gKch522eWlF59/w3rg/x6fzfjc41pluWuXBqZODjDYzRhgAXYP5jzsJnLP4nMlpf4fMLNvYhA/m4FV
        Y50oagWlJwYsifno+KuKgUR2F/Y1LIeB7UCxb+N7Iz7fhX0G31H87oI9gFXmPoE1Q/8FdlU70NE62HV2
        HNkQ7ALsHXdeprNpIu6cvIj2H8G+g1kth2J7XZu8xqbhQQfb0dHDUZ0WpRu2lE0ygRN/A7T+GKU7fP6s
        ZpNwsAid+aijAfh2OSfPsElVuG55DppHYLq8oj76XUlWsUn1YMbXQ9Qeib6gHRgwOe9Bf8D0dRPL7FWG
        s4MTbw7ErhnhPvelLGG4JqCPRpi9GPyq9yiGswGRNiP4oFZHohL09T7MLuUjDPmDZJ2ZSEhP7D0MTQjo
        84zpX4/QKwylR09iJP5mhLoYmjDKjzwF+cuMoZ2h9CDJHo0hLKllDKVGb2zI/TQyur3AKtjGMagN4lK9
        mKF0IKlkBL6l2wsUv9BoOLq9cDl5Frn2qBxmaHwwkzOQcD9OxiWRIS9CFKIg94DRuUL3+KDxRpN4B4VN
        Y8iLYIWUZIHV0d8MJYN12WQSO+j2JlQhCvKvGK0P6E4GDfXdIkpKvyYrCFyI/5jQ8LJJ+phub4IWkpdD
        sVZeWulOBo174qSSvEW3N0EL0dfjEa2LdCeDhlfjpLxsotubwEtrp9HqpDsZNBx5N2iVLXR7E3hp7TNa
        F+hOBg1/iJPwukq3N4GPyLFYqygtdCeDhudM0im6vQlciL5KR2NqojsZNNR9qSipm25vAhfyj9HaSncy
        WE6rTdJDvEjNYsiLUIXoRoTRGcLkzmMoGTySNCDhlknOdC8JVoi9hxTkF7rTgYQvTPKPdHsRohB9zkPu
        v7FOXvYzlA5cdt+Ik9Uy3BiDFFKQvUZjAMtqNkPpQeJFI/Kn7wZAtYXgaOjGR5/ROM2QH6h+KZIHjZDX
        C1Y1hZRftYvyu8m/jYvOXIb9gcBJI6b2OUPjUlUhuqltcqG1i6FsQOQlzMzI26JayhtS1kJwQrfYPNgN
        vZIynB0MXHca7VamztBuhsckSyEowm4BqT3y3nBIAsV8CLMbZpcYGj4pi3IcvhMVZi/hapVxtZxrlpmU
        0n70H66o/WPXIusYCgdm65OyuHZS8QyG37ptMxxLb/2Y7bWUKANf9Ex1H5rr6Q4PrhyL0MlPsBxdMZ7F
        9KP9GqbGwK//PX6Do/wyXbWj/BdAXl7nz1GkLOY/i1B0gzzUXxVVM04xYxYxKcGAdTe9spipVUQEBm6L
        uTMli4hgMbemdBERKCLdi1CdOnVqjMhT+p1c02jkgeAAAAAASUVORK5CYII=
</value>
  </data>
</root>